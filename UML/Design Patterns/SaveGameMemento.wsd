@startuml SaveGameMemento

class Circus{ /'Originator want to change this'/
    -{static} MAX_TIME = 1 * 60 * 1000 : int
    -score : int
    -endTime : long
    -startTime : long
    -width : int
    -final height : int
    -final constant : List<GameObject>
    -final moving : List<GameObject>
    -final control : List<GameObject>


    +Circus(screenWidth : int , screenWeight : int)
    +Circus(screenWidth : int , screenWeight : int,constant : List<GameObject>,moving : List<GameObject>, control : List<GameObject>,score : int,/'whaterbe has time'/)
    +saveGame()
    +restoreGame(snapshot : Snapshot)
}

/'Memento'/
-class Snapshot{
    /'whatever holds current time?'/
    -final score : int
    -final constant : List<GameObject>
    -final moving : List<GameObject>
    -final control : List<GameObject>
    -final screenWeight : int
    -final screenWidth : int 


    Snapshot(circus : Circus)
}


/'caretaker is main?'/
class History{
    -circus : Circus
    -gamesSaved : Stack<Memento>

    +History(circus : Circus)
    +saveGame() : void
}

class Main/'want to change this'/
{
    final gameController : GameController
    history : History
}
Circus +- Snapshot
History o-- Circus  
Main *- History
Main *-- Circus

@enduml