@startuml Iterator

interface Iterator { 
    +hasNext(): boolean
    +next() : Plate
}

class ClownIteratorConcrete { 
    -Collection: collection
    -int: currentIndex

    +hasNext(): boolean
    +next() : Plate
}

interface Collection{
    
    +createIterator(): CollectionIterator 
    +getPlate(int index): Plate
    +size(): int 
    +removePlates(int startIndex, int endIndex): void 
}

class IntersectWithOjectOnStickStrategy{
    -ArrayList<Plates>: plates



    +createIterator(): CollectionIterator 
    +getPlate(int index): Plate
    +size(): int 
    +removePlates(int startIndex, int endIndex): void 
}

class Clown{
    +main(): void
    -leftStickStack: Stack<GameObject>
    -RigthStickStack: Stack<GameObject>
}

Iterator <|.. ClownIteratorConcrete
Collection <|.. IntersectWithOjectOnStickStrategy

ClownIteratorConcrete o-- IntersectWithOjectOnStickStrategy

Clown --> IntersectWithOjectOnStickStrategy

@enduml