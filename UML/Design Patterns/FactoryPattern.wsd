@startuml Singelton

  abstract class ObjectsFactory{
    makeObject():FallingObject
}
interface Shape implements FallingObject{
    +move():void
    +contactwithClown():Boolean
    +contactwithStick():Boolean

-moveStrategy:MovementStrategy     
+setX():void
    +setY():void
   + move(SpeedStrategy):void
    +contactwithClown():Boolean
    +contactwithStick():Boolean
}

interface GameObject{}




ObjectsFactory --> GameObject:Factory Pattern


class Plates extends Shape{

}

class Bombs extends Shape{

}

class Hearts extends Shape{

}

class Cups extends Shape{

}

interface FallingObject extends GameObject{}




@enduml