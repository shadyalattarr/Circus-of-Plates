@startuml Singelton

  abstract class ObjectsFactory{
    makeObject():Object
}
interface FallingObjects implements Object{
    +move():void
    +contactwithClown():Boolean
    +contactwithStick():Boolean

-moveStrategy:MovementStrategy     
+setX():void
    +setY():void
   + move(SpeedStrategy):void
    +contactwithClown():Boolean
    +contactwithStick():Boolean
}

interface Object{}
class clown implements ControlObject{}
interface ControlObject implements Object{}


ObjectsFactory --> Object:Factory Pattern


class Plates implements FallingObjects{

}

class Bombs implements FallingObjects{

}

class Hearts implements FallingObjects{

}

class AddTime implements FallingObjects{

}

class Bowl implements FallingObjects{

}



@enduml